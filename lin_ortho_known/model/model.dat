1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:17
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.



                         The Abaqus Software is a product of:

                           Dassault Systemes SIMULIA Corp.
                           1301 Atwood Avenue, Suite 101W
                              Johnston, RI 02919, USA
 


                   The Abaqus Software is available only under license
                   from Dassault Systemes or its subsidiary and may be
                   used or reproduced only in accordance with the terms
                   of such license.
 
                          On machine Asteria 
                          you are authorized to run
                          Abaqus/Standard until 30-Sep-2019

                          Your site id is: 200000000001545 


 
                    For assistance or any other information you may
                    obtain contact information for your local office
                    from the world wide web at:

                      http://www.3ds.com/products/simulia/locations/

 
                * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
                *                                                         * 
                *                   *****************                     * 
                *                   *  N O T I C E  *                     * 
                *                   *****************                     * 
                *                                                         * 
                *                                                         * 
                *               Abaqus 3DEXPERIENCE R2018x                * 
                *                                                         * 
                *          BUILD ID: 2017_11_07-12.21.41 127140           * 
                *                                                         * 
                *                                                         * 
                *  Please make sure you are using                         * 
                *  release 3DEXPERIENCE R2018x manuals                    * 
                *  plus the notes accompanying this release.              * 
                *                                                         * 
                *                                                         * 
                *                                                         * 
                *                                                         * 
                *                                                         * 
                *   This program may not be used for commercial purposes  * 
                *           without payment of a commercial fee.          * 
                *                                                         * 
                * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 


 



     PROCESSING PART, INSTANCE, AND ASSEMBLY INFORMATION
   *******************************************************


     END PROCESSING PART, INSTANCE, AND ASSEMBLY INFORMATION
   ***********************************************************




     OPTIONS BEING PROCESSED
   ***************************


  *Heading
  *Node
  *Element, type=M3D4
  *Nset, nset=ASSEMBLY_PART-1-1_SET-1
  *Nset, nset=ASSEMBLY_PART-1-1_SET-2
  *Nset, nset=ASSEMBLY_PART-1-1_SET-3
  *Elset, elset=ASSEMBLY_PART-1-1_SET-1
  *Nset, nset=ASSEMBLY_SET-1
  *Elset, elset=ASSEMBLY_SET-1
  *Elset, elset=ASSEMBLY__SURF-1_SNEG
  *material, name=MATERIAL-1
  *elastic, type=ENGINEERINGCONSTANTS
  *membranesection, elset=ASSEMBLY_PART-1-1_SET-1, material=MATERIAL-1
  *surface, type=ELEMENT, name=ASSEMBLY_SURF-1
  *surface, type=ELEMENT, name=ASSEMBLY_SURF-1
  *boundary
  *boundary
  *surface, type=ELEMENT, name=ASSEMBLY_SURF-1
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *output, field
  *output, history, variable=PRESELECT
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *elementoutput, directions=YES
  *Step, name=Step-1, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-2, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-3, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-4, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-5, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-6, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-7, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-8, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-9, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-10, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-11, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-12, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-13, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-14, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-15, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-16, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-17, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-18, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-19, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-20, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-21, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-22, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-23, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-24, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-25, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-26, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-27, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-28, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-29, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-30, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-31, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-32, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-33, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-34, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-35, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-36, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-37, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-38, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-39, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-40, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-41, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-42, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-43, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-44, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-45, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-46, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-47, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-48, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-49, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-50, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-51, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-52, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-53, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-54, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-55, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-56, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-57, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-58, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-59, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-60, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-61, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-62, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-63, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-64, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-65, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-66, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-67, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-68, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-69, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-70, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-71, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-72, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-73, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-74, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-75, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-76, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-77, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-78, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-79, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-80, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-81, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-82, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-83, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-84, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-85, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-86, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-87, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-88, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-89, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-90, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-91, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-92, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-93, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-94, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-95, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-96, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-97, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-98, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-99, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-100, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-101, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-102, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-103, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-104, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-105, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-106, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-107, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-108, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-109, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-110, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-111, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-112, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-113, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-114, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-115, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-116, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-117, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-118, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-119, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-120, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-121, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-122, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-123, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-124, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-125, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-126, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-127, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-128, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-129, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-130, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-131, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-132, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-133, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-134, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-135, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-136, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-137, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-138, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-139, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-140, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-141, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-142, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-143, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-144, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-145, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-146, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-147, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-148, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-149, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-150, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-151, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-152, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-153, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-154, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-155, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-156, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-157, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-158, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-159, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-160, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-161, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-162, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-163, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-164, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-165, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-166, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-167, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-168, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-169, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-170, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-171, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-172, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-173, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-174, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-175, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-176, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-177, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-178, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-179, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-180, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-181, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-182, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-183, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-184, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-185, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-186, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-187, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-188, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-189, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-190, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-191, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-192, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-193, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-194, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-195, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-196, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-197, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-198, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-199, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-200, nlgeom=YES, inc=1000
  *output, field
  *output, history, variable=PRESELECT
  *Step, name=Step-1, nlgeom=YES, inc=1000
  *Step, name=Step-2, nlgeom=YES, inc=1000
  *Step, name=Step-3, nlgeom=YES, inc=1000
  *Step, name=Step-4, nlgeom=YES, inc=1000
  *Step, name=Step-5, nlgeom=YES, inc=1000
  *Step, name=Step-6, nlgeom=YES, inc=1000
  *Step, name=Step-7, nlgeom=YES, inc=1000
  *Step, name=Step-8, nlgeom=YES, inc=1000
  *Step, name=Step-9, nlgeom=YES, inc=1000
  *Step, name=Step-10, nlgeom=YES, inc=1000
  *Step, name=Step-11, nlgeom=YES, inc=1000
  *Step, name=Step-12, nlgeom=YES, inc=1000
  *Step, name=Step-13, nlgeom=YES, inc=1000
  *Step, name=Step-14, nlgeom=YES, inc=1000
  *Step, name=Step-15, nlgeom=YES, inc=1000
  *Step, name=Step-16, nlgeom=YES, inc=1000
  *Step, name=Step-17, nlgeom=YES, inc=1000
  *Step, name=Step-18, nlgeom=YES, inc=1000
  *Step, name=Step-19, nlgeom=YES, inc=1000
  *Step, name=Step-20, nlgeom=YES, inc=1000
  *Step, name=Step-21, nlgeom=YES, inc=1000
  *Step, name=Step-22, nlgeom=YES, inc=1000
  *Step, name=Step-23, nlgeom=YES, inc=1000
  *Step, name=Step-24, nlgeom=YES, inc=1000
  *Step, name=Step-25, nlgeom=YES, inc=1000
  *Step, name=Step-26, nlgeom=YES, inc=1000
  *Step, name=Step-27, nlgeom=YES, inc=1000
  *Step, name=Step-28, nlgeom=YES, inc=1000
  *Step, name=Step-29, nlgeom=YES, inc=1000
  *Step, name=Step-30, nlgeom=YES, inc=1000
  *Step, name=Step-31, nlgeom=YES, inc=1000
  *Step, name=Step-32, nlgeom=YES, inc=1000
  *Step, name=Step-33, nlgeom=YES, inc=1000
  *Step, name=Step-34, nlgeom=YES, inc=1000
  *Step, name=Step-35, nlgeom=YES, inc=1000
  *Step, name=Step-36, nlgeom=YES, inc=1000
  *Step, name=Step-37, nlgeom=YES, inc=1000
  *Step, name=Step-38, nlgeom=YES, inc=1000
  *Step, name=Step-39, nlgeom=YES, inc=1000
  *Step, name=Step-40, nlgeom=YES, inc=1000
  *Step, name=Step-41, nlgeom=YES, inc=1000
  *Step, name=Step-42, nlgeom=YES, inc=1000
  *Step, name=Step-43, nlgeom=YES, inc=1000
  *Step, name=Step-44, nlgeom=YES, inc=1000
  *Step, name=Step-45, nlgeom=YES, inc=1000
  *Step, name=Step-46, nlgeom=YES, inc=1000
  *Step, name=Step-47, nlgeom=YES, inc=1000
  *Step, name=Step-48, nlgeom=YES, inc=1000
  *Step, name=Step-49, nlgeom=YES, inc=1000
  *Step, name=Step-50, nlgeom=YES, inc=1000
  *Step, name=Step-51, nlgeom=YES, inc=1000
  *Step, name=Step-52, nlgeom=YES, inc=1000
  *Step, name=Step-53, nlgeom=YES, inc=1000
  *Step, name=Step-54, nlgeom=YES, inc=1000
  *Step, name=Step-55, nlgeom=YES, inc=1000
  *Step, name=Step-56, nlgeom=YES, inc=1000
  *Step, name=Step-57, nlgeom=YES, inc=1000
  *Step, name=Step-58, nlgeom=YES, inc=1000
  *Step, name=Step-59, nlgeom=YES, inc=1000
  *Step, name=Step-60, nlgeom=YES, inc=1000
  *Step, name=Step-61, nlgeom=YES, inc=1000
  *Step, name=Step-62, nlgeom=YES, inc=1000
  *Step, name=Step-63, nlgeom=YES, inc=1000
  *Step, name=Step-64, nlgeom=YES, inc=1000
  *Step, name=Step-65, nlgeom=YES, inc=1000
  *Step, name=Step-66, nlgeom=YES, inc=1000
  *Step, name=Step-67, nlgeom=YES, inc=1000
  *Step, name=Step-68, nlgeom=YES, inc=1000
  *Step, name=Step-69, nlgeom=YES, inc=1000
  *Step, name=Step-70, nlgeom=YES, inc=1000
  *Step, name=Step-71, nlgeom=YES, inc=1000
  *Step, name=Step-72, nlgeom=YES, inc=1000
  *Step, name=Step-73, nlgeom=YES, inc=1000
  *Step, name=Step-74, nlgeom=YES, inc=1000
  *Step, name=Step-75, nlgeom=YES, inc=1000
  *Step, name=Step-76, nlgeom=YES, inc=1000
  *Step, name=Step-77, nlgeom=YES, inc=1000
  *Step, name=Step-78, nlgeom=YES, inc=1000
  *Step, name=Step-79, nlgeom=YES, inc=1000
  *Step, name=Step-80, nlgeom=YES, inc=1000
  *Step, name=Step-81, nlgeom=YES, inc=1000
  *Step, name=Step-82, nlgeom=YES, inc=1000
  *Step, name=Step-83, nlgeom=YES, inc=1000
  *Step, name=Step-84, nlgeom=YES, inc=1000
  *Step, name=Step-85, nlgeom=YES, inc=1000
  *Step, name=Step-86, nlgeom=YES, inc=1000
  *Step, name=Step-87, nlgeom=YES, inc=1000
  *Step, name=Step-88, nlgeom=YES, inc=1000
  *Step, name=Step-89, nlgeom=YES, inc=1000
  *Step, name=Step-90, nlgeom=YES, inc=1000
  *Step, name=Step-91, nlgeom=YES, inc=1000
  *Step, name=Step-92, nlgeom=YES, inc=1000
  *Step, name=Step-93, nlgeom=YES, inc=1000
  *Step, name=Step-94, nlgeom=YES, inc=1000
  *Step, name=Step-95, nlgeom=YES, inc=1000
  *Step, name=Step-96, nlgeom=YES, inc=1000
  *Step, name=Step-97, nlgeom=YES, inc=1000
  *Step, name=Step-98, nlgeom=YES, inc=1000
  *Step, name=Step-99, nlgeom=YES, inc=1000
  *Step, name=Step-100, nlgeom=YES, inc=1000
  *Step, name=Step-101, nlgeom=YES, inc=1000
  *Step, name=Step-102, nlgeom=YES, inc=1000
  *Step, name=Step-103, nlgeom=YES, inc=1000
  *Step, name=Step-104, nlgeom=YES, inc=1000
  *Step, name=Step-105, nlgeom=YES, inc=1000
  *Step, name=Step-106, nlgeom=YES, inc=1000
  *Step, name=Step-107, nlgeom=YES, inc=1000
  *Step, name=Step-108, nlgeom=YES, inc=1000
  *Step, name=Step-109, nlgeom=YES, inc=1000
  *Step, name=Step-110, nlgeom=YES, inc=1000
  *Step, name=Step-111, nlgeom=YES, inc=1000
  *Step, name=Step-112, nlgeom=YES, inc=1000
  *Step, name=Step-113, nlgeom=YES, inc=1000
  *Step, name=Step-114, nlgeom=YES, inc=1000
  *Step, name=Step-115, nlgeom=YES, inc=1000
  *Step, name=Step-116, nlgeom=YES, inc=1000
  *Step, name=Step-117, nlgeom=YES, inc=1000
  *Step, name=Step-118, nlgeom=YES, inc=1000
  *Step, name=Step-119, nlgeom=YES, inc=1000
  *Step, name=Step-120, nlgeom=YES, inc=1000
  *Step, name=Step-121, nlgeom=YES, inc=1000
  *Step, name=Step-122, nlgeom=YES, inc=1000
  *Step, name=Step-123, nlgeom=YES, inc=1000
  *Step, name=Step-124, nlgeom=YES, inc=1000
  *Step, name=Step-125, nlgeom=YES, inc=1000
  *Step, name=Step-126, nlgeom=YES, inc=1000
  *Step, name=Step-127, nlgeom=YES, inc=1000
  *Step, name=Step-128, nlgeom=YES, inc=1000
  *Step, name=Step-129, nlgeom=YES, inc=1000
  *Step, name=Step-130, nlgeom=YES, inc=1000
  *Step, name=Step-131, nlgeom=YES, inc=1000
  *Step, name=Step-132, nlgeom=YES, inc=1000
  *Step, name=Step-133, nlgeom=YES, inc=1000
  *Step, name=Step-134, nlgeom=YES, inc=1000
  *Step, name=Step-135, nlgeom=YES, inc=1000
  *Step, name=Step-136, nlgeom=YES, inc=1000
  *Step, name=Step-137, nlgeom=YES, inc=1000
  *Step, name=Step-138, nlgeom=YES, inc=1000
  *Step, name=Step-139, nlgeom=YES, inc=1000
  *Step, name=Step-140, nlgeom=YES, inc=1000
  *Step, name=Step-141, nlgeom=YES, inc=1000
  *Step, name=Step-142, nlgeom=YES, inc=1000
  *Step, name=Step-143, nlgeom=YES, inc=1000
  *Step, name=Step-144, nlgeom=YES, inc=1000
  *Step, name=Step-145, nlgeom=YES, inc=1000
  *Step, name=Step-146, nlgeom=YES, inc=1000
  *Step, name=Step-147, nlgeom=YES, inc=1000
  *Step, name=Step-148, nlgeom=YES, inc=1000
  *Step, name=Step-149, nlgeom=YES, inc=1000
  *Step, name=Step-150, nlgeom=YES, inc=1000
  *Step, name=Step-151, nlgeom=YES, inc=1000
  *Step, name=Step-152, nlgeom=YES, inc=1000
  *Step, name=Step-153, nlgeom=YES, inc=1000
  *Step, name=Step-154, nlgeom=YES, inc=1000
  *Step, name=Step-155, nlgeom=YES, inc=1000
  *Step, name=Step-156, nlgeom=YES, inc=1000
  *Step, name=Step-157, nlgeom=YES, inc=1000
  *Step, name=Step-158, nlgeom=YES, inc=1000
  *Step, name=Step-159, nlgeom=YES, inc=1000
  *Step, name=Step-160, nlgeom=YES, inc=1000
  *Step, name=Step-161, nlgeom=YES, inc=1000
  *Step, name=Step-162, nlgeom=YES, inc=1000
  *Step, name=Step-163, nlgeom=YES, inc=1000
  *Step, name=Step-164, nlgeom=YES, inc=1000
  *Step, name=Step-165, nlgeom=YES, inc=1000
  *Step, name=Step-166, nlgeom=YES, inc=1000
  *Step, name=Step-167, nlgeom=YES, inc=1000
  *Step, name=Step-168, nlgeom=YES, inc=1000
  *Step, name=Step-169, nlgeom=YES, inc=1000
  *Step, name=Step-170, nlgeom=YES, inc=1000
  *Step, name=Step-171, nlgeom=YES, inc=1000
  *Step, name=Step-172, nlgeom=YES, inc=1000
  *Step, name=Step-173, nlgeom=YES, inc=1000
  *Step, name=Step-174, nlgeom=YES, inc=1000
  *Step, name=Step-175, nlgeom=YES, inc=1000
  *Step, name=Step-176, nlgeom=YES, inc=1000
  *Step, name=Step-177, nlgeom=YES, inc=1000
  *Step, name=Step-178, nlgeom=YES, inc=1000
  *Step, name=Step-179, nlgeom=YES, inc=1000
  *Step, name=Step-180, nlgeom=YES, inc=1000
  *Step, name=Step-181, nlgeom=YES, inc=1000
  *Step, name=Step-182, nlgeom=YES, inc=1000
  *Step, name=Step-183, nlgeom=YES, inc=1000
  *Step, name=Step-184, nlgeom=YES, inc=1000
  *Step, name=Step-185, nlgeom=YES, inc=1000
  *Step, name=Step-186, nlgeom=YES, inc=1000
  *Step, name=Step-187, nlgeom=YES, inc=1000
  *Step, name=Step-188, nlgeom=YES, inc=1000
  *Step, name=Step-189, nlgeom=YES, inc=1000
  *Step, name=Step-190, nlgeom=YES, inc=1000
  *Step, name=Step-191, nlgeom=YES, inc=1000
  *Step, name=Step-192, nlgeom=YES, inc=1000
  *Step, name=Step-193, nlgeom=YES, inc=1000
  *Step, name=Step-194, nlgeom=YES, inc=1000
  *Step, name=Step-195, nlgeom=YES, inc=1000
  *Step, name=Step-196, nlgeom=YES, inc=1000
  *Step, name=Step-197, nlgeom=YES, inc=1000
  *Step, name=Step-198, nlgeom=YES, inc=1000
  *Step, name=Step-199, nlgeom=YES, inc=1000
  *Step, name=Step-200, nlgeom=YES, inc=1000
  *Step, name=Step-1, nlgeom=YES, inc=1000
  *static, stabilize, factor=0.0002, allsdtol=0, continue=NO

 ***WARNING: CONSTANT DAMPING FACTOR WILL BE USED THROUGHOUT THE WHOLE STEP 
             SINCE ALLSDTOL IS EQUAL TO ZERO.
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-2, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-3, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-4, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-5, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-6, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-7, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-8, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-9, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-10, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-11, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-12, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-13, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-14, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-15, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-16, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-17, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-18, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-19, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-20, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-21, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-22, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-23, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-24, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-25, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-26, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-27, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-28, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-29, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-30, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-31, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-32, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-33, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-34, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-35, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-36, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-37, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-38, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-39, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-40, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-41, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-42, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-43, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-44, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-45, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-46, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-47, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-48, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-49, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-50, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-51, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-52, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-53, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-54, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-55, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-56, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-57, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-58, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-59, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-60, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-61, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-62, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-63, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-64, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-65, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-66, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-67, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-68, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-69, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-70, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-71, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-72, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-73, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-74, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-75, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-76, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-77, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-78, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-79, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-80, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-81, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-82, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-83, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-84, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-85, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-86, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-87, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-88, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-89, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-90, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-91, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-92, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-93, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-94, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-95, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-96, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-97, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-98, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-99, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-100, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-101, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-102, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-103, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-104, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-105, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-106, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-107, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-108, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-109, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-110, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-111, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-112, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-113, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-114, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-115, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-116, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-117, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-118, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-119, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-120, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-121, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-122, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-123, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-124, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-125, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-126, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-127, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-128, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-129, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-130, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-131, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-132, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-133, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-134, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-135, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-136, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-137, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-138, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-139, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-140, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-141, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-142, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-143, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-144, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-145, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-146, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-147, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-148, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-149, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-150, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-151, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-152, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-153, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-154, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-155, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-156, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-157, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-158, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-159, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-160, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-161, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-162, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-163, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-164, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-165, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-166, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-167, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-168, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-169, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-170, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-171, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-172, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-173, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-174, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-175, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-176, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-177, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-178, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-179, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-180, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-181, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-182, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-183, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-184, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-185, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-186, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-187, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-188, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-189, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-190, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-191, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-192, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-193, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-194, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-195, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-196, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-197, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-198, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-199, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *Step, name=Step-200, nlgeom=YES, inc=1000
  *static
  *dsload
  *output, field
  *nodeoutput
  *elementoutput, directions=YES
  *output, history, variable=PRESELECT
  *endstep
  *boundary
  *Step, name=Step-1, nlgeom=YES, inc=1000
  *static, stabilize, factor=0.0002, allsdtol=0, continue=NO
  *endstep
  *Step, name=Step-2, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-3, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-4, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-5, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-6, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-7, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-8, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-9, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-10, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-11, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-12, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-13, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-14, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-15, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-16, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-17, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-18, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-19, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-20, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-21, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-22, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-23, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-24, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-25, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-26, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-27, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-28, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-29, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-30, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-31, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-32, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-33, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-34, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-35, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-36, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-37, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-38, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-39, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-40, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-41, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-42, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-43, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-44, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-45, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-46, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-47, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-48, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-49, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-50, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-51, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-52, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-53, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-54, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-55, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-56, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-57, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-58, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-59, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-60, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-61, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-62, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-63, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-64, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-65, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-66, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-67, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-68, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-69, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-70, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-71, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-72, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-73, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-74, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-75, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-76, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-77, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-78, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-79, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-80, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-81, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-82, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-83, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-84, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-85, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-86, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-87, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-88, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-89, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-90, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-91, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-92, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-93, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-94, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-95, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-96, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-97, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-98, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-99, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-100, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-101, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-102, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-103, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-104, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-105, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-106, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-107, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-108, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-109, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-110, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-111, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-112, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-113, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-114, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-115, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-116, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-117, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-118, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-119, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-120, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-121, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-122, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-123, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-124, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-125, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-126, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-127, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-128, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-129, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-130, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-131, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-132, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-133, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-134, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-135, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-136, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-137, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-138, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-139, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-140, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-141, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-142, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-143, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-144, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-145, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-146, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-147, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-148, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-149, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-150, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-151, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-152, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-153, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-154, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-155, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-156, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-157, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-158, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-159, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-160, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-161, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-162, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-163, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-164, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-165, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-166, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-167, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-168, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-169, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-170, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-171, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-172, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-173, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-174, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-175, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-176, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-177, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-178, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-179, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-180, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-181, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-182, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-183, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-184, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-185, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-186, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-187, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-188, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-189, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-190, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-191, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-192, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-193, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-194, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-195, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-196, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-197, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-198, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-199, nlgeom=YES, inc=1000
  *static
  *endstep
  *Step, name=Step-200, nlgeom=YES, inc=1000
  *static
  *endstep

 ***WARNING: Boundary conditions are specified on inactive dof of 72 nodes. The 
             nodes have been identified in node set WarnNodeBCInactiveDof.

     - (RAMP) OR (STEP) - INDICATE USE OF DEFAULT AMPLITUDES ASSOCIATED WITH THE STEP



                            P R O B L E M   S I Z E


          NUMBER OF ELEMENTS IS                                   900
          NUMBER OF NODES IS                                      937
          NUMBER OF NODES DEFINED BY THE USER                     937
          TOTAL NUMBER OF VARIABLES IN THE MODEL                 2811
          (DEGREES OF FREEDOM PLUS MAX NO. OF ANY LAGRANGE MULTIPLIER
           VARIABLES. INCLUDE *PRINT,SOLVE=YES TO GET THE ACTUAL NUMBER.)



                              END OF USER INPUT PROCESSING



     JOB TIME SUMMARY
       USER TIME (SEC)      =   2.7000    
       SYSTEM TIME (SEC)    =  0.32000    
       TOTAL CPU TIME (SEC) =   3.0200    
       WALLCLOCK TIME (SEC) =          3
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:21
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP    1  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P       1     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

     AUTOMATIC STABILIZATION WITH DAMPING FACTOR =  2.000E-04

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:21
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP    2  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P       2     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:22
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP    3  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P       3     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:22
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP    4  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P       4     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:22
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP    5  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P       5     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:22
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP    6  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P       6     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:23
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP    7  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P       7     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:23
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP    8  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P       8     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:23
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP    9  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P       9     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:23
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   10  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      10     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:23
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   11  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      11     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:23
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   12  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      12     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:24
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   13  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      13     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:24
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   14  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      14     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:24
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   15  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      15     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:24
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   16  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      16     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:24
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   17  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      17     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:24
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   18  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      18     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:25
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   19  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      19     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:25
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   20  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      20     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:25
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   21  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      21     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:25
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   22  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      22     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:25
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   23  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      23     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:26
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   24  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      24     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:26
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   25  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      25     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:26
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   26  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      26     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:26
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   27  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      27     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:26
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   28  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      28     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:27
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   29  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      29     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:27
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   30  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      30     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:27
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   31  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      31     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:27
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   32  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      32     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:27
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   33  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      33     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:28
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   34  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      34     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:28
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   35  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      35     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:28
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   36  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      36     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:28
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   37  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      37     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:28
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   38  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      38     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:29
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   39  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      39     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:29
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   40  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      40     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:29
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   41  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      41     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:29
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   42  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      42     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:29
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   43  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      43     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:29
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   44  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      44     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:30
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   45  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      45     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:30
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   46  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      46     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:30
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   47  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      47     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:30
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   48  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      48     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:30
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   49  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      49     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:31
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   50  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      50     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:31
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   51  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      51     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:31
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   52  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      52     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:31
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   53  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      53     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:31
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   54  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      54     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:32
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   55  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      55     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:32
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   56  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      56     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:32
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   57  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      57     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:32
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   58  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      58     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:32
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   59  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      59     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:33
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   60  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      60     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:33
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   61  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      61     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:33
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   62  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      62     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:33
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   63  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      63     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:34
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   64  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      64     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:34
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   65  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      65     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:34
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   66  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      66     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:35
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   67  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      67     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:35
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   68  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      68     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:35
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   69  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      69     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:35
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   70  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      70     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:35
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   71  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      71     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:36
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   72  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      72     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:36
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   73  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      73     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:36
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   74  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      74     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:36
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   75  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      75     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:36
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   76  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      76     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:37
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   77  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      77     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:37
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   78  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      78     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:37
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   79  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      79     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:37
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   80  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      80     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:37
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   81  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      81     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:38
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   82  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      82     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:38
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   83  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      83     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:38
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   84  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      84     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:38
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   85  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      85     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:39
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   86  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      86     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:39
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   87  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      87     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:39
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   88  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      88     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:39
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   89  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      89     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:39
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   90  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      90     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:40
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   91  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      91     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:40
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   92  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      92     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:40
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   93  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      93     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:40
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   94  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      94     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:40
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   95  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      95     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:41
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   96  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      96     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
1

   Abaqus 3DEXPERIENCE R2018x                                  Date 24-Jan-2019   Time 11:00:41
   For use by UNIVERSITY OF FLORIDA under license from Dassault Systemes or its subsidiary.

                                                                                               STEP   97  INCREMENT    1
                                                                                          TIME COMPLETED IN THIS STEP   0.00    


                        S T E P      97     S T A T I C   A N A L Y S I S


                                                                                          

     AUTOMATIC TIME CONTROL WITH -
          A SUGGESTED INITIAL TIME INCREMENT OF                 1.00    
          AND A TOTAL TIME PERIOD OF                            1.00    
          THE MINIMUM TIME INCREMENT ALLOWED IS                1.000E-05
          THE MAXIMUM TIME INCREMENT ALLOWED IS                 1.00    

     LINEAR EQUATION SOLVER TYPE         DIRECT SPARSE

          LARGE DISPLACEMENT THEORY WILL BE USED
  
                   M E M O R Y   E S T I M A T E
  
 PROCESS      FLOATING PT       MINIMUM MEMORY        MEMORY TO
              OPERATIONS           REQUIRED          MINIMIZE I/O
             PER ITERATION           (MB)               (MB)
  
     1          1.58E+07               17                 27
  
 NOTE:
      (1) SINCE ABAQUS DOES NOT PRE-ALLOCATE MEMORY AND ONLY ALLOCATES MEMORY AS NEEDED DURING THE ANALYSIS,
          THE MEMORY REQUIREMENT PRINTED HERE CAN ONLY BE VIEWED AS A GENERAL GUIDELINE BASED ON THE BEST
          KNOWLEDGE AVAILABLE AT THE BEGINNING OF A STEP BEFORE THE SOLUTION PROCESS HAS BEGUN.
      (2) THE ESTIMATE IS NORMALLY UPDATED AT THE BEGINNING OF EVERY STEP. IT IS THE MAXIMUM VALUE OF THE
          ESTIMATE FROM THE CURRENT STEP TO THE LAST STEP OF THE ANALYSIS, WITH UNSYMMETRIC SOLUTION TAKEN
          INTO ACCOUNT IF APPLICABLE. 
      (3) SINCE THE ESTIMATE IS BASED ON THE ACTIVE DEGREES OF FREEDOM IN THE FIRST ITERATION OF THE 
          CURRENT STEP, THE MEMORY ESTIMATE MIGHT BE SIGNIFICANTLY DIFFERENT THAN ACTUAL USAGE FOR 
          PROBLEMS WITH SUBSTANTIAL CHANGES IN ACTIVE DEGREES OF FREEDOM BETWEEN STEPS (OR EVEN WITHIN
          THE SAME STEP). EXAMPLES ARE: PROBLEMS WITH SIGNIFICANT CONTACT CHANGES, PROBLEMS WITH MODEL
          CHANGE, PROBLEMS WITH BOTH STATIC STEP AND STEADY STATE DYNAMIC PROCEDURES WHERE ACOUSTIC 
          ELEMENTS WILL ONLY BE ACTIVATED IN THE STEADY STATE DYNAMIC STEPS.
      (4) FOR MULTI-PROCESS EXECUTION, THE ESTIMATED VALUE OF FLOATING POINT OPERATIONS FOR EACH PROCESS
          IS BASED ON AN INITIAL SCHEDULING OF OPERATIONS AND MIGHT NOT REFLECT THE ACTUAL FLOATING 
          POINT OPERATIONS COMPLETED ON EACH PROCESS. OPERATIONS ARE DYNAMICALLY BALANCED DURING EXECUTION, 
          SO THE ACTUAL BALANCE OF OPERATIONS BETWEEN PROCESSES IS EXPECTED TO BE BETTER THAN THE ESTIMATE
          PRINTED HERE.
      (5) THE UPPER LIMIT OF MEMORY THAT CAN BE ALLOCATED BY ABAQUS WILL IN GENERAL DEPEND ON THE VALUE OF
          THE "MEMORY" PARAMETER AND THE AMOUNT OF PHYSICAL MEMORY AVAILABLE ON THE MACHINE. PLEASE SEE
          THE "ABAQUS ANALYSIS USER'S MANUAL" FOR MORE DETAILS. THE ACTUAL USAGE OF MEMORY AND OF DISK
          SPACE FOR SCRATCH DATA WILL DEPEND ON THIS UPPER LIMIT AS WELL AS THE MEMORY REQUIRED TO MINIMIZE
          I/O. IF THE MEMORY UPPER LIMIT IS GREATER THAN THE MEMORY REQUIRED TO MINIMIZE I/O, THEN THE ACTUAL
          MEMORY USAGE WILL BE CLOSE TO THE ESTIMATED "MEMORY TO MINIMIZE I/O" VALUE, AND THE SCRATCH DISK
          USAGE WILL BE CLOSE-TO-ZERO; OTHERWISE, THE ACTUAL MEMORY USED WILL BE CLOSE TO THE PREVIOUSLY
          MENTIONED MEMORY LIMIT, AND THE SCRATCH DISK USAGE WILL BE ROUGHLY PROPORTIONAL TO THE DIFFERENCE
          BETWEEN THE ESTIMATED "MEMORY TO MINIMIZE I/O" AND THE MEMORY UPPER LIMIT. HOWEVER ACCURATE
          ESTIMATE OF THE SCRATCH DISK SPACE IS NOT POSSIBLE.
      (6) USING "*RESTART, WRITE" CAN GENERATE A LARGE AMOUNT OF DATA WRITTEN IN THE WORK DIRECTORY.
